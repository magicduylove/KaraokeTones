/**
 * PitchVisualizationView - View component for pitch detection visualization
 */

import React from 'react';

const PitchVisualizationView = ({
  currentPitch,
  pitchHistory = [],
  isRecording = false,
  sessionStats = null
}) => {\n  /**\n   * Get color based on pitch confidence\n   */\n  const getPitchColor = (confidence) => {\n    if (!confidence || confidence === 0) return '#666';\n    if (confidence < 0.3) return '#ff9800';\n    if (confidence < 0.7) return '#4CAF50';\n    return '#2196F3';\n  };\n\n  /**\n   * Get pitch bar height based on frequency\n   */\n  const getPitchBarHeight = (frequency) => {\n    if (!frequency) return 2;\n    // Normalize frequency to a reasonable height (80Hz to 1000Hz range)\n    const minFreq = 80;\n    const maxFreq = 1000;\n    const normalizedFreq = Math.max(0, Math.min(1, (frequency - minFreq) / (maxFreq - minFreq)));\n    return Math.max(2, normalizedFreq * 80); // 2px minimum, 80px maximum\n  };\n\n  /**\n   * Format frequency for display\n   */\n  const formatFrequency = (frequency) => {\n    if (!frequency) return 'Silent';\n    return `${frequency.toFixed(1)} Hz`;\n  };\n\n  return (\n    <div className=\"pitch-visualization-view\">\n      {/* Current Pitch Display */}\n      <div className=\"current-pitch-section\">\n        <h3>Current Pitch</h3>\n        <div className=\"pitch-display\">\n          <div className=\"pitch-value\">\n            {currentPitch ? formatFrequency(currentPitch.frequency) : 'No signal'}\n          </div>\n          <div className=\"pitch-note\">\n            {currentPitch?.note || 'Silent'}\n          </div>\n          {currentPitch?.confidence > 0 && (\n            <div className=\"confidence-meter\">\n              <div className=\"confidence-label\">Confidence</div>\n              <div className=\"confidence-bar\">\n                <div \n                  className=\"confidence-fill\"\n                  style={{\n                    width: `${(currentPitch.confidence * 100)}%`,\n                    backgroundColor: getPitchColor(currentPitch.confidence)\n                  }}\n                />\n              </div>\n              <div className=\"confidence-value\">\n                {Math.round(currentPitch.confidence * 100)}%\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Recording Status */}\n      <div className=\"recording-status\">\n        {isRecording ? (\n          <div className=\"recording-active\">\n            <div className=\"recording-dot\"></div>\n            <span>Recording and analyzing your voice...</span>\n          </div>\n        ) : (\n          <div className=\"recording-inactive\">\n            <span>Click \"Start Recording\" to begin pitch detection</span>\n          </div>\n        )}\n      </div>\n\n      {/* Pitch History Visualization */}\n      {pitchHistory.length > 0 && (\n        <div className=\"pitch-history-section\">\n          <h3>Pitch History</h3>\n          <div className=\"pitch-graph\">\n            {pitchHistory.map((pitchData, index) => (\n              <div\n                key={pitchData.id || index}\n                className=\"pitch-bar\"\n                style={{\n                  height: `${getPitchBarHeight(pitchData.frequency)}px`,\n                  backgroundColor: getPitchColor(pitchData.confidence)\n                }}\n                title={`${pitchData.note || 'Silent'} - ${formatFrequency(pitchData.frequency)}`}\n              />\n            ))}\n          </div>\n          <div className=\"graph-labels\">\n            <span>Time â†’</span>\n          </div>\n        </div>\n      )}\n\n      {/* Session Statistics */}\n      {sessionStats && sessionStats.totalPitches > 0 && (\n        <div className=\"session-stats\">\n          <h3>Session Statistics</h3>\n          <div className=\"stats-grid\">\n            <div className=\"stat-item\">\n              <div className=\"stat-value\">{sessionStats.totalPitches}</div>\n              <div className=\"stat-label\">Total Pitches</div>\n            </div>\n            <div className=\"stat-item\">\n              <div className=\"stat-value\">{sessionStats.validPitches}</div>\n              <div className=\"stat-label\">Valid Pitches</div>\n            </div>\n            <div className=\"stat-item\">\n              <div className=\"stat-value\">\n                {sessionStats.averageFrequency ? \n                  `${sessionStats.averageFrequency.toFixed(1)} Hz` : 'N/A'\n                }\n              </div>\n              <div className=\"stat-label\">Avg Frequency</div>\n            </div>\n            <div className=\"stat-item\">\n              <div className=\"stat-value\">\n                {sessionStats.validPitches > 0 ? \n                  `${Math.round((sessionStats.validPitches / sessionStats.totalPitches) * 100)}%` : '0%'\n                }\n              </div>\n              <div className=\"stat-label\">Accuracy</div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      <style jsx>{`\n        .pitch-visualization-view {\n          width: 100%;\n          max-width: 800px;\n          margin: 0 auto;\n          padding: 20px;\n        }\n\n        .current-pitch-section {\n          margin-bottom: 30px;\n        }\n\n        .current-pitch-section h3 {\n          color: #fff;\n          margin-bottom: 15px;\n          text-align: center;\n        }\n\n        .pitch-display {\n          background: #1a1a1a;\n          border-radius: 10px;\n          padding: 25px;\n          text-align: center;\n        }\n\n        .pitch-value {\n          font-size: 2.5em;\n          font-weight: bold;\n          color: #4CAF50;\n          margin-bottom: 10px;\n        }\n\n        .pitch-note {\n          font-size: 1.5em;\n          color: #ccc;\n          margin-bottom: 20px;\n        }\n\n        .confidence-meter {\n          max-width: 300px;\n          margin: 0 auto;\n        }\n\n        .confidence-label {\n          font-size: 0.9em;\n          color: #999;\n          margin-bottom: 5px;\n        }\n\n        .confidence-bar {\n          height: 8px;\n          background: #333;\n          border-radius: 4px;\n          overflow: hidden;\n          margin-bottom: 5px;\n        }\n\n        .confidence-fill {\n          height: 100%;\n          transition: width 0.1s ease;\n        }\n\n        .confidence-value {\n          font-size: 0.9em;\n          color: #ccc;\n        }\n\n        .recording-status {\n          text-align: center;\n          margin: 20px 0;\n          padding: 15px;\n          border-radius: 8px;\n        }\n\n        .recording-active {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          gap: 10px;\n          color: #4CAF50;\n          background: rgba(76, 175, 80, 0.1);\n          border: 1px solid #4CAF50;\n          border-radius: 8px;\n          padding: 15px;\n        }\n\n        .recording-dot {\n          width: 12px;\n          height: 12px;\n          background: #f44336;\n          border-radius: 50%;\n          animation: pulse 1s infinite;\n        }\n\n        @keyframes pulse {\n          0%, 100% { opacity: 1; }\n          50% { opacity: 0.3; }\n        }\n\n        .recording-inactive {\n          color: #999;\n          font-style: italic;\n        }\n\n        .pitch-history-section {\n          margin: 30px 0;\n        }\n\n        .pitch-history-section h3 {\n          color: #fff;\n          margin-bottom: 15px;\n          text-align: center;\n        }\n\n        .pitch-graph {\n          display: flex;\n          align-items: flex-end;\n          justify-content: center;\n          height: 100px;\n          gap: 2px;\n          background: #000;\n          border-radius: 8px;\n          padding: 10px;\n          overflow-x: auto;\n        }\n\n        .pitch-bar {\n          min-width: 6px;\n          max-width: 8px;\n          flex: 1;\n          border-radius: 2px;\n          transition: height 0.1s ease;\n        }\n\n        .graph-labels {\n          text-align: center;\n          margin-top: 10px;\n          color: #999;\n          font-size: 0.9em;\n        }\n\n        .session-stats {\n          background: #1a1a1a;\n          border-radius: 10px;\n          padding: 20px;\n          margin-top: 20px;\n        }\n\n        .session-stats h3 {\n          color: #fff;\n          margin-bottom: 20px;\n          text-align: center;\n        }\n\n        .stats-grid {\n          display: grid;\n          grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n          gap: 15px;\n        }\n\n        .stat-item {\n          text-align: center;\n          padding: 15px;\n          background: #2a2a2a;\n          border-radius: 8px;\n        }\n\n        .stat-value {\n          font-size: 1.5em;\n          font-weight: bold;\n          color: #4CAF50;\n          margin-bottom: 5px;\n        }\n\n        .stat-label {\n          font-size: 0.9em;\n          color: #ccc;\n        }\n\n        @media (max-width: 600px) {\n          .pitch-visualization-view {\n            padding: 10px;\n          }\n          \n          .pitch-value {\n            font-size: 2em;\n          }\n          \n          .pitch-note {\n            font-size: 1.2em;\n          }\n          \n          .stats-grid {\n            grid-template-columns: repeat(2, 1fr);\n          }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default PitchVisualizationView;